'use client'

export default function Menu() {
  const menuItems = [
    { id: 'espresso', name: '–≠—Å–ø—Ä–µ—Å—Å–æ', description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∏—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –∫–æ—Ñ–µ, –∫—Ä–µ–ø–∫–∏–π –∏ –∞—Ä–æ–º–∞—Ç–Ω—ã–π', price: 150, category: 'coffee' },
    { id: 'americano', name: '–ê–º–µ—Ä–∏–∫–∞–Ω–æ', description: '–≠—Å–ø—Ä–µ—Å—Å–æ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –≥–æ—Ä—è—á–µ–π –≤–æ–¥—ã', price: 180, category: 'coffee' },
    { id: 'cappuccino', name: '–ö–∞–ø—É—á–∏–Ω–æ', description: '–≠—Å–ø—Ä–µ—Å—Å–æ —Å –º–æ–ª–æ—á–Ω–æ–π –ø–µ–Ω–æ–π –∏ –º–æ–ª–æ–∫–æ–º', price: 200, category: 'coffee' },
    { id: 'latte', name: '–õ–∞—Ç—Ç–µ', description: '–≠—Å–ø—Ä–µ—Å—Å–æ —Å –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –º–æ–ª–æ–∫–∞', price: 220, category: 'coffee' },
    { id: 'mocha', name: '–ú–æ–∫–∫–æ', description: '–≠—Å–ø—Ä–µ—Å—Å–æ —Å —à–æ–∫–æ–ª–∞–¥–æ–º –∏ –º–æ–ª–æ–∫–æ–º', price: 250, category: 'coffee' },
    { id: 'macchiato', name: '–ú–∞–∫–∏–∞—Ç–æ', description: '–≠—Å–ø—Ä–µ—Å—Å–æ —Å –∫–∞–ø–ª–µ–π –º–æ–ª–æ—á–Ω–æ–π –ø–µ–Ω—ã', price: 190, category: 'coffee' },
    { id: 'croissant', name: '–ö—Ä—É–∞—Å—Å–∞–Ω', description: '–°–≤–µ–∂–∏–π —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π –∫—Ä—É–∞—Å—Å–∞–Ω —Å –º–∞—Å–ª–æ–º', price: 120, category: 'dessert' },
    { id: 'cheesecake', name: '–ß–∏–∑–∫–µ–π–∫', description: '–ù–µ–∂–Ω—ã–π —á–∏–∑–∫–µ–π–∫ —Å —è–≥–æ–¥–Ω—ã–º —Å–æ—É—Å–æ–º', price: 180, category: 'dessert' },
    { id: 'tiramisu', name: '–¢–∏—Ä–∞–º–∏—Å—É', description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∏—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –¥–µ—Å–µ—Ä—Ç', price: 200, category: 'dessert' },
    { id: 'tea', name: '–ß–∞–π', description: '–°–≤–µ–∂–µ–∑–∞–≤–∞—Ä–µ–Ω–Ω—ã–π —á–∞–π –Ω–∞ –≤—ã–±–æ—Ä', price: 100, category: 'drinks' },
    { id: 'hot_chocolate', name: '–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥', description: '–ì—É—Å—Ç–æ–π –≥–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥ —Å –∑–µ—Ñ–∏—Ä–æ–º', price: 160, category: 'drinks' },
    { id: 'smoothie', name: '–°–º—É–∑–∏', description: '–§—Ä—É–∫—Ç–æ–≤—ã–π —Å–º—É–∑–∏ —Å —è–≥–æ–¥–∞–º–∏', price: 180, category: 'drinks' }
  ]

  const categories = [
    { id: 'all', name: '–í—Å–µ' },
    { id: 'coffee', name: '–ö–æ—Ñ–µ' },
    { id: 'dessert', name: '–î–µ—Å–µ—Ä—Ç—ã' },
    { id: 'drinks', name: '–ù–∞–ø–∏—Ç–∫–∏' }
  ]

  return (
    <div className="container">
      <div className="text-center mb-12">
        <h1 className="text-5xl font-bold text-coffee mb-4">–ù–∞—à–µ –º–µ–Ω—é</h1>
        <p className="text-xl text-gray">–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –Ω–∞—à–µ–≥–æ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–≥–æ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞</p>
      </div>

      {/* Category Filter */}
      <div className="flex justify-center gap-4 mb-12" style={{ flexWrap: 'wrap' }}>
        {categories.map((category) => (
          <button
            key={category.id}
            className={`btn ${category.id === 'all' ? 'btn-primary' : 'btn-secondary'}`}
            onClick={() => {
              // –ü—Ä–æ—Å—Ç–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –±–µ–∑ JavaScript
              const items = document.querySelectorAll('.menu-item');
              items.forEach((item: any) => {
                if (category.id === 'all' || item.dataset.category === category.id) {
                  item.style.display = 'block';
                } else {
                  item.style.display = 'none';
                }
              });
            }}
          >
            {category.name}
          </button>
        ))}
      </div>

      <div className="grid grid-3">
        {menuItems.map((item) => (
          <div key={item.id} className="product-card menu-item fade-in-up" data-category={item.category}>
            <div className="product-image">
              {item.category === 'coffee' ? '‚òï' : item.category === 'dessert' ? 'üç∞' : 'ü•§'}
            </div>
            <div className="product-content">
              <h3 className="product-title">{item.name}</h3>
              <p className="product-description">{item.description}</p>
              <div className="product-price">{item.price}‚ÇΩ</div>
              <div className="product-actions">
                <button 
                  className="btn btn-primary"
                  onClick={() => {
                    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
                    const cart = JSON.parse(localStorage.getItem('cart') || '[]');
                    const existingItem = cart.find((cartItem: any) => cartItem.id === item.id);
                    
                    if (existingItem) {
                      existingItem.quantity += 1;
                    } else {
                      cart.push({ ...item, quantity: 1 });
                    }
                    
                    localStorage.setItem('cart', JSON.stringify(cart));
                    
                    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
                    const badge = document.getElementById('cart-badge');
                    if (badge) {
                      const totalItems = cart.reduce((sum: number, cartItem: any) => sum + cartItem.quantity, 0);
                      badge.textContent = totalItems.toString();
                      badge.style.display = totalItems > 0 ? 'flex' : 'none';
                    }
                    
                    // –ê–Ω–∏–º–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
                    const button = (event as any).target as HTMLElement;
                    button.textContent = '–î–æ–±–∞–≤–ª–µ–Ω–æ!';
                    button.style.background = '#10b981';
                    setTimeout(() => {
                      button.textContent = '–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É';
                      button.style.background = '';
                    }, 1000);
                  }}
                >
                  –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                </button>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  )
}
